//以O(N) 的求出阶乘，及其逆元。 以O(1) 的时间求组合数
//要求 N 不要过大  ，1e6左右
ll md = 1e9 + 7;
const int maxn = 1e5 + 11;
ll fact[maxn], invfact[maxn], inv[maxn];
void init(){
    fact[0] = fact[1] = invfact[0] = invfact[1] = inv[1] = 1;
    for (int i = 1; i < maxn;++i){
        fact[i]=fact[i-1]*i%md;
        inv[i] = md - ((md / i) * (inv[md % i])) % md;
        invfact[i] = invfact[i - 1] * inv[i] % md;
    }
}

ll getC(int n,int m){
    if(m>n)  return 0;
    return ((fact[n] * invfact[m]) % md * invfact[n - m]) % md;
}
